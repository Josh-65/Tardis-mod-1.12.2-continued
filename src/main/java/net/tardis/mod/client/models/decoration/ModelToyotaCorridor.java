package net.tardis.mod.client.models.decoration;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelToyotaCorridor extends ModelBase {
	//fields
	ModelRenderer InnerBlack1;
	ModelRenderer InnerBlack2;
	ModelRenderer InnerBlack3;
	ModelRenderer InnerBlack4;
	ModelRenderer InnerBlack5;
	ModelRenderer InnerBlack6;
	ModelRenderer InnerBlack7;
	ModelRenderer BlackAngle1;
	ModelRenderer BlackAngle2;
	ModelRenderer BlackAngle3;
	ModelRenderer BlackAngle4;
	ModelRenderer BlackAngle5;
	ModelRenderer BlackAngle6;
	ModelRenderer InnerLad1;
	ModelRenderer InnerLad2;
	ModelRenderer InnerLad3;
	ModelRenderer InnerLad4;
	ModelRenderer InnerLad5;
	ModelRenderer InnerLad6;
	ModelRenderer AngledDivider1;
	ModelRenderer AngledDivider2;
	ModelRenderer AngledDivider3;
	ModelRenderer AngledDivider4;
	ModelRenderer Outline1;
	ModelRenderer Outline2;
	ModelRenderer Outline3;
	ModelRenderer Outline4;
	ModelRenderer Outline5;
	ModelRenderer Outline6;
	ModelRenderer Outline7;
	ModelRenderer SilverInner;

	public ModelToyotaCorridor() {
		textureWidth = 128;
		textureHeight = 128;

		InnerBlack1 = new ModelRenderer(this, 0, 69);
		InnerBlack1.addBox(-10.5F, 4F, 6.5F, 21, 4, 1);
		InnerBlack1.setRotationPoint(0F, -10F, 0F);
		InnerBlack1.setTextureSize(128, 128);
		InnerBlack1.mirror = true;
		setRotation(InnerBlack1, 0F, 0F, 0F);
		InnerBlack2 = new ModelRenderer(this, 92, 0);
		InnerBlack2.addBox(4F, -23F, 6.5F, 4, 23, 1);
		InnerBlack2.setRotationPoint(-17F, 13F, 0F);
		InnerBlack2.setTextureSize(128, 128);
		InnerBlack2.mirror = true;
		setRotation(InnerBlack2, 0F, 0F, 0.296706F);
		InnerBlack3 = new ModelRenderer(this, 92, 0);
		InnerBlack3.addBox(-8F, -23F, 6.5F, 4, 23, 1);
		InnerBlack3.setRotationPoint(17F, 13F, 0F);
		InnerBlack3.setTextureSize(128, 128);
		InnerBlack3.mirror = true;
		setRotation(InnerBlack3, 0F, 0F, -0.296706F);
		InnerBlack4 = new ModelRenderer(this, 102, 0);
		InnerBlack4.addBox(4F, 0F, 6.5F, 4, 13, 1);
		InnerBlack4.setRotationPoint(-17F, 13F, 0F);
		InnerBlack4.setTextureSize(128, 128);
		InnerBlack4.mirror = true;
		setRotation(InnerBlack4, 0F, 0F, -0.1745329F);
		InnerBlack5 = new ModelRenderer(this, 102, 0);
		InnerBlack5.addBox(-8F, 0F, 6.5F, 4, 13, 1);
		InnerBlack5.setRotationPoint(17F, 13F, 0F);
		InnerBlack5.setTextureSize(128, 128);
		InnerBlack5.mirror = true;
		setRotation(InnerBlack5, 0F, 0F, 0.1745329F);
		InnerBlack6 = new ModelRenderer(this, 0, 63);
		InnerBlack6.addBox(-10.5F, 29F, 6.5F, 21, 5, 1);
		InnerBlack6.setRotationPoint(0F, -10F, 0F);
		InnerBlack6.setTextureSize(128, 128);
		InnerBlack6.mirror = true;
		setRotation(InnerBlack6, 0F, 0F, 0F);
		InnerBlack7 = new ModelRenderer(this, 0, 76);
		InnerBlack7.addBox(-10.5F, 16F, 6.5F, 21, 3, 1);
		InnerBlack7.setRotationPoint(0F, -10F, 0F);
		InnerBlack7.setTextureSize(128, 128);
		InnerBlack7.mirror = true;
		setRotation(InnerBlack7, 0F, 0F, 0F);
		BlackAngle1 = new ModelRenderer(this, 24, 0);
		BlackAngle1.addBox(-1.5F, -3F, -0.5F, 3, 4, 1);
		BlackAngle1.setRotationPoint(-4.5F, -2F, 7F);
		BlackAngle1.setTextureSize(128, 128);
		BlackAngle1.mirror = true;
		setRotation(BlackAngle1, 0F, 0F, -0.7853982F);
		BlackAngle2 = new ModelRenderer(this, 24, 0);
		BlackAngle2.addBox(-1.5F, -3F, 0F, 3, 4, 1);
		BlackAngle2.setRotationPoint(4.5F, -2F, 6.5F);
		BlackAngle2.setTextureSize(128, 128);
		BlackAngle2.mirror = true;
		setRotation(BlackAngle2, 0F, 0F, 0.7853982F);
		BlackAngle3 = new ModelRenderer(this, 24, 0);
		BlackAngle3.addBox(-1.5F, -1F, -0.5F, 3, 4, 1);
		BlackAngle3.setRotationPoint(-6.5F, 6F, 7F);
		BlackAngle3.setTextureSize(128, 128);
		BlackAngle3.mirror = true;
		setRotation(BlackAngle3, 0F, 0F, 0.7853982F);
		BlackAngle4 = new ModelRenderer(this, 24, 0);
		BlackAngle4.addBox(-1.5F, -1F, -0.5F, 3, 4, 1);
		BlackAngle4.setRotationPoint(6.5F, 6F, 7F);
		BlackAngle4.setTextureSize(128, 128);
		BlackAngle4.mirror = true;
		setRotation(BlackAngle4, 0F, 0F, -0.7853982F);
		BlackAngle5 = new ModelRenderer(this, 24, 5);
		BlackAngle5.addBox(-2F, -0.5F, -0.5F, 4, 1, 1);
		BlackAngle5.setRotationPoint(-7.5F, 19F, 7F);
		BlackAngle5.setTextureSize(128, 128);
		BlackAngle5.mirror = true;
		setRotation(BlackAngle5, 0F, 0F, 0.7853982F);
		BlackAngle6 = new ModelRenderer(this, 24, 5);
		BlackAngle6.addBox(-2F, -0.5F, -0.5F, 4, 1, 1);
		BlackAngle6.setRotationPoint(7.5F, 19F, 7F);
		BlackAngle6.setTextureSize(128, 128);
		BlackAngle6.mirror = true;
		setRotation(BlackAngle6, 0F, 0F, -0.7853982F);
		InnerLad1 = new ModelRenderer(this, 0, 51);
		InnerLad1.addBox(-9.5F, 0F, 0F, 19, 4, 8);
		InnerLad1.setRotationPoint(0F, -10F, 0F);
		InnerLad1.setTextureSize(128, 128);
		InnerLad1.mirror = true;
		setRotation(InnerLad1, 0F, 0F, 0F);
		InnerLad2 = new ModelRenderer(this, 0, 20);
		InnerLad2.addBox(0F, -23F, 0F, 4, 23, 8);
		InnerLad2.setRotationPoint(-17F, 13F, 0F);
		InnerLad2.setTextureSize(128, 128);
		InnerLad2.mirror = true;
		setRotation(InnerLad2, 0F, 0F, 0.296706F);
		InnerLad3 = new ModelRenderer(this, 0, 20);
		InnerLad3.addBox(-4F, -23F, 0F, 4, 23, 8);
		InnerLad3.setRotationPoint(17F, 13F, 0F);
		InnerLad3.setTextureSize(128, 128);
		InnerLad3.mirror = true;
		setRotation(InnerLad3, 0F, 0F, -0.296706F);
		InnerLad4 = new ModelRenderer(this, 0, 0);
		InnerLad4.addBox(0F, 0F, 0F, 4, 12, 8);
		InnerLad4.setRotationPoint(-17F, 13F, 0F);
		InnerLad4.setTextureSize(128, 128);
		InnerLad4.mirror = true;
		setRotation(InnerLad4, 0F, 0F, -0.1745329F);
		InnerLad5 = new ModelRenderer(this, 0, 0);
		InnerLad5.addBox(-4F, 0F, 0F, 4, 12, 8);
		InnerLad5.setRotationPoint(17F, 13F, 0F);
		InnerLad5.setTextureSize(128, 128);
		InnerLad5.mirror = true;
		setRotation(InnerLad5, 0F, 0F, 0.1745329F);
		InnerLad6 = new ModelRenderer(this, 24, 32);
		InnerLad6.addBox(-10F, 0.5F, 0F, 20, 1, 8);
		InnerLad6.setRotationPoint(0F, -10F, 0F);
		InnerLad6.setTextureSize(128, 128);
		InnerLad6.mirror = true;
		setRotation(InnerLad6, 0F, 0F, 0F);
		AngledDivider1 = new ModelRenderer(this, 38, 0);
		AngledDivider1.addBox(-2F, -2F, 0F, 4, 3, 8);
		AngledDivider1.setRotationPoint(-7.5F, -6F, 0F);
		AngledDivider1.setTextureSize(128, 128);
		AngledDivider1.mirror = true;
		setRotation(AngledDivider1, 0F, 0F, -0.7853982F);
		AngledDivider2 = new ModelRenderer(this, 38, 0);
		AngledDivider2.addBox(-2F, -2F, 0F, 4, 3, 8);
		AngledDivider2.setRotationPoint(7.5F, -6F, 0F);
		AngledDivider2.setTextureSize(128, 128);
		AngledDivider2.mirror = true;
		setRotation(AngledDivider2, 0F, 0F, 0.7853982F);
		AngledDivider3 = new ModelRenderer(this, 62, 0);
		AngledDivider3.addBox(3.5F, -2F, 0F, 1, 5, 8);
		AngledDivider3.setRotationPoint(-17F, 13F, 0F);
		AngledDivider3.setTextureSize(128, 128);
		AngledDivider3.mirror = true;
		setRotation(AngledDivider3, 0F, 0F, 0F);
		AngledDivider4 = new ModelRenderer(this, 62, 0);
		AngledDivider4.addBox(-4.5F, -2F, 0F, 1, 5, 8);
		AngledDivider4.setRotationPoint(17F, 13F, 0F);
		AngledDivider4.setTextureSize(128, 128);
		AngledDivider4.mirror = true;
		setRotation(AngledDivider4, 0F, 0F, 0F);
		Outline1 = new ModelRenderer(this, 0, 74);
		Outline1.addBox(-9.5F, 0F, -0.5F, 19, 1, 1);
		Outline1.setRotationPoint(0F, -10F, 0F);
		Outline1.setTextureSize(128, 128);
		Outline1.mirror = true;
		setRotation(Outline1, 0F, 0F, 0F);
		Outline2 = new ModelRenderer(this, 84, 0);
		Outline2.addBox(-10F, 0.5F, -0.5F, 1, 1, 1);
		Outline2.setRotationPoint(0F, -10F, 0F);
		Outline2.setTextureSize(128, 128);
		Outline2.mirror = true;
		setRotation(Outline2, 0F, 0F, 0F);
		Outline3 = new ModelRenderer(this, 84, 0);
		Outline3.addBox(9F, 0.5F, -0.5F, 1, 1, 1);
		Outline3.setRotationPoint(0F, -10F, 0F);
		Outline3.setTextureSize(128, 128);
		Outline3.mirror = true;
		setRotation(Outline3, 0F, 0F, 0F);
		Outline4 = new ModelRenderer(this, 88, 0);
		Outline4.addBox(0F, -23F, -0.5F, 1, 23, 1);
		Outline4.setRotationPoint(-17F, 13F, 0F);
		Outline4.setTextureSize(128, 128);
		Outline4.mirror = true;
		setRotation(Outline4, 0F, 0F, 0.296706F);
		Outline5 = new ModelRenderer(this, 88, 0);
		Outline5.addBox(-1F, -23F, -0.5F, 1, 23, 1);
		Outline5.setRotationPoint(17F, 13F, 0F);
		Outline5.setTextureSize(128, 128);
		Outline5.mirror = true;
		setRotation(Outline5, 0F, 0F, -0.296706F);
		Outline6 = new ModelRenderer(this, 80, 0);
		Outline6.addBox(0F, 0F, -0.5F, 1, 12, 1);
		Outline6.setRotationPoint(-17F, 13F, 0F);
		Outline6.setTextureSize(128, 128);
		Outline6.mirror = true;
		setRotation(Outline6, 0F, 0F, -0.1745329F);
		Outline7 = new ModelRenderer(this, 80, 0);
		Outline7.addBox(-1F, 0F, -0.5F, 1, 12, 1);
		Outline7.setRotationPoint(17F, 13F, 0F);
		Outline7.setTextureSize(128, 128);
		Outline7.mirror = true;
		setRotation(Outline7, 0F, 0F, 0.1745329F);
		SilverInner = new ModelRenderer(this, 24, 11);
		SilverInner.addBox(-9.5F, 8F, 7F, 19, 21, 0);
		SilverInner.setRotationPoint(0F, -10F, 0F);
		SilverInner.setTextureSize(128, 128);
		SilverInner.mirror = true;
		setRotation(SilverInner, 0F, 0F, 0F);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		InnerBlack1.render(f5);
		InnerBlack2.render(f5);
		InnerBlack3.render(f5);
		InnerBlack4.render(f5);
		InnerBlack5.render(f5);
		InnerBlack6.render(f5);
		InnerBlack7.render(f5);
		BlackAngle1.render(f5);
		BlackAngle2.render(f5);
		BlackAngle3.render(f5);
		BlackAngle4.render(f5);
		BlackAngle5.render(f5);
		BlackAngle6.render(f5);
		InnerLad1.render(f5);
		InnerLad2.render(f5);
		InnerLad3.render(f5);
		InnerLad4.render(f5);
		InnerLad5.render(f5);
		InnerLad6.render(f5);
		AngledDivider1.render(f5);
		AngledDivider2.render(f5);
		AngledDivider3.render(f5);
		AngledDivider4.render(f5);
		Outline1.render(f5);
		Outline2.render(f5);
		Outline3.render(f5);
		Outline4.render(f5);
		Outline5.render(f5);
		Outline6.render(f5);
		Outline7.render(f5);
		SilverInner.render(f5);
	}

	public void renderOpen(float f5) {
		InnerLad1.render(f5);
		InnerLad2.render(f5);
		InnerLad3.render(f5);
		InnerLad4.render(f5);
		InnerLad5.render(f5);
		InnerLad6.render(f5);
		AngledDivider1.render(f5);
		AngledDivider2.render(f5);
		AngledDivider3.render(f5);
		AngledDivider4.render(f5);
		Outline1.render(f5);
		Outline2.render(f5);
		Outline3.render(f5);
		Outline4.render(f5);
		Outline5.render(f5);
		Outline6.render(f5);
		Outline7.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
		super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
	}

}
